library("parallel")
parallel::detectCores()
install.packages("rvest")
install.packages("dplyr")
install.packages("forecast")
install.packages("caret")
install.packages("data.table")
install.packages("tidyverse")
library(rvest)
html <- "https://www.feiertagskalender.ch/index.php?geo=369&klasse=4&jahr=2017&hl=de"
rvest::html_tag(html)
x <- read_html(html)
library(rvest)
library(httr)
set_config(config(ssl_verifypeer = 0L))
url <- "https://www.feiertagskalender.ch/index.php?geo=369&klasse=4&jahr=2017&hl=de"
x <- read_html(html)
install.packages("httr")
install.packages("devtools")
library(rvest)
library(httr)
set_config(config(ssl_verifypeer = 0L))
url <- "https://www.feiertagskalender.ch/index.php?geo=369&klasse=4&jahr=2017&hl=de"
x <- read_html(html)
library(rvest)
library(httr)
set_config( config( ssl_verifypeer = 0L ) )
url <- "https://www.feiertagskalender.ch/index.php?geo=369&klasse=4&jahr=2017&hl=de"
x <- read_html(html)
x <- read_html(html)
library(rvest)
library(httr)
set_config( config( ssl_verifypeer = 0L ) )
url <- "https://www.feiertagskalender.ch/index.php?geo=369&klasse=4&jahr=2017&hl=de"
x <- read_html(html)
library(rvest)
library(httr)
set_config( config( ssl_verifypeer = 0L ) )
url <- "https://www.feiertagskalender.ch/index.php?geo=369&klasse=4&jahr=2017&hl=de"
x <- read_html(url)
library(dplyr)
library(jsonlite)
library(purrr)
library(lubridate)
setwd("GitHub/parse_calendar")
system('python parse_calendar.py --from 2010 --to 2030') #Parse Website
json <- read_json("data.json", simplifyVector = TRUE)
json_sub <- json[['Bern']]
extract_date <- function(df) {
df %>% mutate(Year = year(Date),
Month = month(Date),
Day = day(Date),
Wday = wday(Date))
}
vacation <- map_df(json_sub, function(x) as.data.frame(x)) %>%
transmute(Date = ymd(V7), Desc = V8) %>%
extract_date()
dates %>% group_by(Year) %>% summarise(n = n())
vacation <- map_df(json_sub, function(x) as.data.frame(x)) %>%
transmute(Date = ymd(V7), Desc = V8) %>%
extract_date()
dates <- seq(from=ymd('2010-01-01'),
to=ymd('2040-01-01'),
by='month') %>%
data.frame(Date = .) %>%
extract_date() %>%
filter(!(Wday %in% c(1,7)))
dates %>% group_by(Year) %>% summarise(n = n())
dates %>% group_by(Year, Month) %>% summarise(n = n())
dates %>% group_by(Year) %>% summarise(n = n())
dates %>% group_by(Year & Month) %>% summarise(n = n())
dates %>% group_by(Month) %>% summarise(n = n())
dates %>% group_by(Month, Year) %>% summarise(n = n())
dates %>% group_by_(.dots = c("Year", "Month")) %>% summarise(n = n())
dates %>% as.data.table()
library(data.table)
dates %>% as.data.table()
dates %>% as.data.table() %>% .[, .N, by=c("Year", "Month")]
extract_date <- function(df) {
df %>% mutate(Year = year(Date) %>% as.numeric,
Month = month(Date) %>% as.numeric,
Day = day(Date) %>% as.numeric,
Wday = wday(Date) %>% as.numeric)
}
vacation <- map_df(json_sub, function(x) as.data.frame(x)) %>%
transmute(Date = ymd(V7), Desc = V8) %>%
extract_date()
dates <- seq(from=ymd('2010-01-01'),
to=ymd('2040-01-01'),
by='month') %>%
data.frame(Date = .) %>%
extract_date() %>%
filter(!(Wday %in% c(1,7)))
dates %>% group_by(Year, Month) %>% summarise(n = n())
View(dates)
dates <- seq(from=ymd('2010-01-01'),
to=ymd('2040-01-01'),
by='day') %>%
data.frame(Date = .) %>%
extract_date() %>%
filter(!(Wday %in% c(1,7)))
dates %>% group_by(Year, Month) %>% summarise(n = n())
number_wdays <- dates %>%
group_by(Year, Month) %>%
summarise(Count = n()) %>%
ungroup()
number_wdays
number_wdays <- dates %>%
group_by(Year, Month) %>%
summarise(Count = n()) %>%
ungroup() %>%
left_join(vacation)
number_wdays <- dates %>%
group_by(Year, Month) %>%
summarise(Count = n()) %>%
ungroup() %>%
left_join(vacation, by = c("Year", "Month"))
vacation <- map_df(json_sub, function(x) as.data.frame(x)) %>%
transmute(Date = ymd(V7), Desc = V8) %>%
extract_date() %>%
group_by(Year, Month) %>%
summarise(Vacations = n())
View(vacation)
vacation <- map_df(json_sub, function(x) as.data.frame(x)) %>%
transmute(Date = ymd(V7), Desc = V8) %>%
extract_date() %>%
group_by(Year, Month) %>%
summarise(Vacations = n()) %>%
ungroup()
dates <- seq(from=ymd('2010-01-01'),
to=ymd('2040-01-01'),
by='day') %>%
data.frame(Date = .) %>%
extract_date() %>%
filter(!(Wday %in% c(1,7)))
dates %>%
group_by(Year, Month) %>%
summarise(Count = n()) %>%
ungroup() %>%
left_join(vacation, by = c("Year", "Month"))
dates %>%
group_by(Year, Month) %>%
summarise(Count = n()) %>%
ungroup() %>%
left_join(vacation, by = c("Year", "Month")) %>%
mutate(WDays = Count - Vacations)
dates %>%
group_by(Year, Month) %>%
summarise(Count = n()) %>%
ungroup() %>%
left_join(vacation, by = c("Year", "Month")) %>%
tidyr::complete(fill = list(Vacations = 0))
dates %>%
group_by(Year, Month) %>%
summarise(Count = n()) %>%
ungroup() %>%
left_join(vacation, by = c("Year", "Month")) %>%
tidyr::complete(fill = list("Vacations" = 0))
?tidyr::complete
dates %>%
group_by(Year, Month) %>%
summarise(Count = n()) %>%
ungroup() %>%
left_join(vacation, by = c("Year", "Month")) %>%
tidyr::replace_na(fill = list(Vacations = 0))
dates %>%
group_by(Year, Month) %>%
summarise(Count = n()) %>%
ungroup() %>%
left_join(vacation, by = c("Year", "Month")) %>%
tidyr::replace_na(fill = list(Vacations = 0))
dates %>%
group_by(Year, Month) %>%
summarise(Count = n()) %>%
ungroup() %>%
left_join(vacation, by = c("Year", "Month")) %>%
tidyr::replace_na(fill = list(Vacations = 0))
dates %>%
group_by(Year, Month) %>%
summarise(Count = n()) %>%
ungroup() %>%
left_join(vacation, by = c("Year", "Month")) %>%
tidyr::replace_na(fill = list(Vacations = 0))
dates %>%
group_by(Year, Month) %>%
summarise(Count = n()) %>%
ungroup() %>%
left_join(vacation, by = c("Year", "Month")) %>%
tidyr::replace_na(fill = list(Vacations = 0))
?replace_na
dates %>%
group_by(Year, Month) %>%
summarise(Count = n()) %>%
ungroup() %>%
left_join(vacation, by = c("Year", "Month")) %>%
tidyr::replace_na(fill = list(Vacations = 0))
dates %>%
group_by(Year, Month) %>%
summarise(Count = n()) %>%
ungroup() %>%
left_join(vacation, by = c("Year", "Month")) %>%
ungroup() %>%
tidyr::replace_na(fill = list(Vacations = 0))
dates %>%
group_by(Year, Month) %>%
summarise(Count = n()) %>%
ungroup() %>%
left_join(vacation, by = c("Year", "Month"))
dates %>%
group_by(Year, Month) %>%
summarise(Count = n()) %>%
ungroup() %>%
left_join(vacation, by = c("Year", "Month"))
wday <- dates %>%
group_by(Year, Month) %>%
summarise(Count = n()) %>%
ungroup() %>%
left_join(vacation, by = c("Year", "Month"))
wday
wday %>% tidyr::replace_na(list(Vacations = 0))
wdays <- dates %>%
group_by(Year, Month) %>%
summarise(Count = n()) %>%
ungroup() %>%
left_join(vacation, by = c("Year", "Month"))
wdays <- wdays %>%
tidyr::replace_na(list(Vacations = 0)) %>%
mutate(wday = Count - Vacations)
wdays
wdays <- wdays %>%
tidyr::replace_na(list(Vacations = 0)) %>%
mutate(Wdays = Count - Vacations) %>%
select(Year, Month, Wdays)
library(dplyr)
library(jsonlite)
library(purrr)
library(lubridate)
library(data.table)
setwd("GitHub/parse_calendar")
system('python parse_calendar.py --from 2010 --to 2030') #Parse Website
json <- read_json("data.json", simplifyVector = TRUE)
json_sub <- json[['Bern']]
extract_date <- function(df) {
df %>% mutate(Year = year(Date) %>% as.numeric,
Month = month(Date) %>% as.numeric,
Day = day(Date) %>% as.numeric,
Wday = wday(Date) %>% as.numeric)
}
vacation <- map_df(json_sub, function(x) as.data.frame(x)) %>%
transmute(Date = ymd(V7), Desc = V8) %>%
extract_date() %>%
group_by(Year, Month) %>%
summarise(Vacations = n()) %>%
ungroup()
dates <- seq(from=ymd('2010-01-01'),
to=ymd('2040-01-01'),
by='day') %>%
data.frame(Date = .) %>%
extract_date() %>%
filter(!(Wday %in% c(1,7)))
wdays <- dates %>%
group_by(Year, Month) %>%
summarise(Count = n()) %>%
ungroup() %>%
left_join(vacation, by = c("Year", "Month"))
wdays <- wdays %>%
tidyr::replace_na(list(Vacations = 0)) %>%
mutate(Wdays = Count - Vacations) %>%
select(Year, Month, Wdays)
wdays <- dates %>%
group_by(Year, Month) %>%
summarise(Count = n()) %>%
ungroup() %>%
left_join(vacation, by = c("Year", "Month")) %>%
tidyr::replace_na(list(Vacations = 0)) %>%
mutate(Wdays = Count - Vacations) %>%
select(Year, Month, Wdays)
View(wdays)
wdays
# dummy dates sequence
dates <- seq(from=ymd('2010-01-01'),
to=ymd('2040-01-01'),
by='day') %>%
data.frame(Date = .) %>%
extract_date() %>%
filter(!(Wday %in% c(1,7)))
wdays <- dates %>%
group_by(Year, Month) %>%
summarise(Count = n()) %>%
ungroup() %>%
left_join(vacation, by = c("Year", "Month")) %>%
tidyr::replace_na(list(Vacations = 0)) %>%
mutate(Wdays = Count - Vacations) %>%
select(Year, Month, Wdays)
GROUP BY Month, Year, [name05]"
select = "SELECT Month,
GROUP BY Month, Year, [name05]'
GROUP BY Month, Year, [name05]'
GROUP BY Month, Year, [name05]"
GROUP BY Month, Year, [name05]"
select <- "SELECT Month,
Year,
[name05] Costcenter,
Sales = sum(Sales)
FROM [PowerBI].[dbo].[Sales] x
LEFT JOIN [dbo].[Item] i on i.idClient = x.idClient and x.idItem = i.idItem
LEFT JOIN [dbo].[Costcenter] co on co.idCostcenter = x.idCostcenterPOS and co.idClient = x.idClient
GROUP BY Month, Year, [name05]"
select <- "SELECT Month,
Year,
[name05] Costcenter,
Sales = sum(Sales)
FROM [PowerBI].[dbo].[Sales] x
LEFT JOIN [dbo].[Item] i on i.idClient = x.idClient and x.idItem = i.idItem
LEFT JOIN [dbo].[Costcenter] co on co.idCostcenter = x.idCostcenterPOS and co.idClient = x.idClient
GROUP BY Month, Year, [name05]"
library(RODBC)
dbhandle <- odbcDriverConnect('driver={SQL Server};server=CRHBUSADWH02;database=PowerBI;trusted_connection=true')
df <- sqlQuery(dbhandle, select)
df
df <- df %>%
left_join(wdays)
View(df)
df <- df %>%
left_join(wdays) %>%
group_by(Year, Costcenter) %>%
mutate(Sales_Full_Year = sum(Sales))
View(df)
df <- df %>%
left_join(wdays) %>%
group_by(Year, Costcenter) %>%
mutate(Sales_Full_Year = sum(Sales)) %>%
ungroup() %>%
mutate(Relative = Sales / Sales_Full_Year)
df <- sqlQuery(dbhandle, select)
df_bak <- df
df <- df %>%
left_join(wdays, by = c("Month", "Year")) %>%
group_by(Year, Costcenter) %>%
mutate(Sales_Full_Year = sum(Sales)) %>%
ungroup() %>%
mutate(Relative = Sales / Sales_Full_Year)
df %>% View()
df %>% filter(Costcenter = 'Region Ost', Year = 2017)
df %>% filter(Costcenter == 'Region Ost', Year == 2017)
df <- df %>%
left_join(wdays, by = c("Month", "Year")) %>%
group_by(Year, Costcenter) %>%
mutate(Sales_Full_Year = sum(Sales)) %>%
ungroup() %>%
mutate(Relative = Sales / Sales_Full_Year) %>%
filter(Year != year(now()))
df <- df %>%
left_join(wdays, by = c("Month", "Year")) %>%
group_by(Year, Costcenter) %>%
mutate(Sales_Full_Year = sum(Sales)) %>%
ungroup() %>%
mutate(Relative = Sales / Sales_Full_Year) %>%
filter(Year != year(now())) %>%
na.omit()
df
df <- df_bak
df <- df %>%
left_join(wdays, by = c("Month", "Year")) %>%
group_by(Year, Costcenter) %>%
mutate(Sales_Full_Year = sum(Sales)) %>%
ungroup() %>%
mutate(Relative = Sales / Sales_Full_Year) %>%
filter(Year != year(now())) %>%
na.omit()
df
model <- lm(Relative~Month+Costcenter+Wdays)
model <- lm(Relative~Month+Costcenter+Wdays, data = df)
summary(model)
model <- lm(Relative~as.factor(Month)+Costcenter+Wdays, data = df)
summary(model)
library(tidyr)
by_costcenter %>% group_by(Costcenter) %>% nest()
by_costcenter <- df %>% group_by(Costcenter) %>% nest()
by_costcenter <- df %>%
group_by(Costcenter) %>%
nest()
by_costcenter
by_costcenter <- by_costcenter %>%
mutate(model = data %>% map(lmodel))
lmodel <- function(df){
df <- df %>% mutate(Month = Month %>% as.factor)
lm(Relative~as.factor(Month)+Costcenter+Wdays, data = df)
}
by_costcenter <- by_costcenter %>%
mutate(model = data %>% map(lmodel))
lmodel <- function(df){
df <- df %>% mutate(Month = Month %>% as.factor)
lm(Relative~as.factor(Month)+Wdays, data = df)
}
by_costcenter <- by_costcenter %>%
mutate(model = data %>% map(lmodel))
by_costcenter
by_costcenter %>% filter(Costcenter == 'Region Ost')
by_costcenter %>% filter(Costcenter == 'Region Ost') %>% .[['model']]
by_costcenter %>% filter(Costcenter == 'Region Ost') %>% .[['model']] %>% summary()
by_costcenter %>% filter(Costcenter == 'Region Ost') %>% summary(.[['model']])
by_costcenter %>% filter(Costcenter == 'Region Ost')
by_costcenter %>% filter(Costcenter == 'Region Ost') %>% .[['model']]
by_costcenter %>% filter(Costcenter == 'Region Ost') %>% .['model']
by_costcenter %>% filter(Costcenter == 'Region Ost') %>% .[['model']]
m <- by_costcenter %>% filter(Costcenter == 'Region Ost') %>% .[['model']]
summary(m)
summary(m[1])
summary(m[[1]])
lmodel <- function(df){
df <- df %>% mutate(Month = Month %>% as.factor)
lm(Relative~Month+Wdays, data = df)
}
by_costcenter <- by_costcenter %>%
mutate(model = data %>% map(lmodel))
m <- by_costcenter %>% filter(Costcenter == 'Region Ost') %>% .[['model']]
summary(m[[1]])
by_costcenter %>% filter(Costcenter == 'Region Ost') %>% .[['model']][[1]] %>% summary()
by_costcenter %>% filter(Costcenter == 'Region Ost') %>% .[['model']] %>% .[[1]] %>% summary()
by_costcenter %>%
filter(Costcenter == 'Region Ost') %>%
.[['model']] %>%
.[[1]] %>% summary()
by_costcenter %>%
filter(Costcenter == 'Region Mitte') %>%
.[['model']] %>%
.[[1]] %>% summary()
wdays %>% filter(Year = 2017)
wdays %>% filter(Year == 2017)
new.data <- wdays %>% filter(Year == 2017) %>% mutate(Month = Month %>% as.factor)
by_costcenter <- by_costcenter %>%
mutate(predict = model %>% map(function(model) predict(model, new.data)))
by_costcenter
by_costcenter %>% .[['predict']]
unnested <- by_costcenter %>% unnest()
unnested <- by_costcenter %>% select(Costcenter, data, predict) %>% unnest()
unnested <- by_costcenter %>% select(Costcenter, predict) %>% unnest()
unnested
predict_map <- function(model, new.data){
pred <- predict(model, new.data)
new.data %>% mutate(prediction = pred)
}
by_costcenter <- by_costcenter %>%
mutate(predict = model %>% map2(new.data, .f = predict_map))
by_costcenter <- by_costcenter %>%
mutate(predict = model %>% map(predict_map, new.data))
unnested <- by_costcenter %>% select(Costcenter, predict) %>% unnest()
unnested
unnested
unnested %>% filter(!grepl("Log", Costcenter))
unnested %>% filter(!grepl("LOG", Costcenter))
unnested %>% filter(!grepl("LOG", tolower(Costcenter)))
unnested %>% filter(!grepl("log", tolower(Costcenter)))
output <- unnested %>%
filter(!grepl("log", tolower(Costcenter)))
output
install.packages("openxlsx")
library(openxlsx)
output %>% write.xlsx("phasing.xlsx")
installr::install.rtools()
install.packages("installr")
installr::install.rtools()
output %>% write.xlsx("phasing.xlsx")
Sys.setenv("R_ZIPCMD" = "C:/Program Files/7-Zip/7z.exe")
output %>% write.xlsx("phasing.xlsx")
Sys.getenv("PATH")
Sys.setenv("R_ZIPCMD" = "C:/Program Files/7-Zip/7z.exe")
output %>% write.xlsx("phasing.xlsx")
output %>% write_tsv("phasing.tsv")
write_tsv(output, "pha")
library(readr)
output %>% write_tsv("phasing.tsv")
